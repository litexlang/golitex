"""
Chapter 7
"""

# Definition 7.1

prop is_subgroup(s set, op fn(s, s)s, e s, inv fn(s)s, items set):
    $is_group(s, op, e, inv)
    items $subset_of s
    =>:
        # Here need need semantics which says fn(s, s)s does not necessarily mean dom is (s,s) and return value is s, it can mean (s, s) is subset_of its actual domain and return value is in s.
        $is_group(items, op, e, inv)

prop is_subgroup_containing(s set, op fn(s, s)s, e s, inv fn(s)s, s2 set, items set):
    $is_group(s2, op, e, inv)
    s2 $subset_of s
    items $subset_of s2

prop is_subgroup_generated_by_items(s set, op fn(s, s)s, e s, inv fn(s)s, s2 set, items set):
    $is_subgroup_containing(s, op, e, inv, s2, items)
    forall s3 set:
        s3 $subset_of s
        $is_subgroup_containing(s, op, e, inv, s3, items)
        =>:
            s2 $subset_of s3

# Define order of multiplication of an element in a group
fn power_of_item(s set, op fn(s, s)s, e s, inv fn(s)s, x s, n Z) s:
    power_of_item(s, op, e, inv, x, 0) = e
    power_of_item(s, op, e, inv, x, n + 1) = power_of_item(s, op, e, inv, x, n) \op x
    power_of_item(s, op, e, inv, x, n - 1) = power_of_item(s, op, e, inv, x, n) \op inv(x)

# Theorem 7.1
exist_prop n Z st item_equals_power_of_item(s set, op fn(s, s)s, e s, inv fn(s)s, x s, y s):
    y = power_of_item(s, op, e, inv, x, n)

# {x^n | n in Z}
fn_set subgroup_generated_by_item(s set, op fn(s, s)s, e s, inv fn(s)s, x s) item s:
    $item_equals_power_of_item(s, op, e, inv, x, item)

# Such function is not unique. For example, maybe m != n but x^m = x^n. Here we just pick one of them.
# I guess with this function, we do not needs exist_prop item_equals_power_of_item.
fn index_of_y_in_subgroup_generated_by_item(s set, op fn(s, s)s, e s, inv fn(s)s, x s, y subgroup_generated_by_item(s, op, e, inv, x)) Z:
    y = power_of_item(s, op, e, inv, x, index_of_y_in_subgroup_generated_by_item(s, op, e, inv, x, y))

know:
    forall s set, op fn(s, s)s, e s, inv fn(s)s, x s:
        dom:
            $is_group(s, op, e, inv)
        =>:
            $is_group(subgroup_generated_by_item(s, op, e, inv, x),op, e, inv)

# Definition 7.2
# Isomorphism of groups
prop is_bijection(s set, s2 set, f fn(s)s2) :
    $is_injection(s, s2, f)
    $is_surjection(s, s2, f)

prop is_isomorphism_of_groups(s set, op fn(s, s)s, e s, inv fn(s)s, s2 set, op2 fn(s2, s2)s2, e2 s2, inv2 fn(s2)s2, isomorphism_of_groups fn(s)s2):
    $is_group(s, op, e, inv)
    $is_group(s2, op2, e2, inv2)
    $is_bijection(isomorphism_of_groups)
    forall x s, y s:
        op2(isomorphism_of_groups(x), isomorphism_of_groups(y)) = isomorphism_of_groups(op(x, y))
        inv2(isomorphism_of_groups(x)) = isomorphism_of_groups(inv(x))
        isomorphism_of_groups(e) = e2

# Theorem 7.2
forall s set, op fn(s, s)s, e s, inv fn(s)s, x s:
    or:
        $is_isomorphism_of_groups(subgroup_generated_by_item(s, op, e, inv, x), op, e, inv, Z, +, 0, -, index_of_y_in_subgroup_generated_by_item)
        subgroup_generated_by_item(s, op, e, inv, x) $in finite_set

forall s set, op fn(s, s)s, e s, inv fn(s)s, x s:
    subgroup_generated_by_item(s, op, e, inv, x) $in finite_set
    =>:
        $is_isomorphism_of_groups(subgroup_generated_by_item(s, op, e, inv, x), op, e, inv, cc(len(subgroup_generated_by_item(s, op, e, inv, x))), cc_add(len(subgroup_generated_by_item(s, op, e, inv, x))), cc_e(len(subgroup_generated_by_item(s, op, e, inv, x))), cc_inv(len(subgroup_generated_by_item(s, op, e, inv, x))), index_of_y_in_subgroup_generated_by_item)

exist_prop x s st is_cyclic_group(s set, op fn(s, s)s, e s, inv fn(s)s):
    $is_group(s, op, e, inv)
    s $in finite_set
    s = subgroup_generated_by_item(s, op, e, inv, x)

