# Version 1: 2025-06-14

# This is first try to formalize the book. Because the kernel has implemented finite sequence, and it is relatively hard to define finite sequence in pure litex code (and more importantly, it is not necessary because soon I implement the kernel to support finite sequence), sometimes when it comes to definitions on "a finite sequence of numbers", I suppose the finite sequence has exactly 2 elements. For example, mutually prime sequence is defined as a finite sequence of numbers, and each number is a prime number, and the two numbers are mutually prime. In my case, I just define a finite sequence as a pair of numbers.

# Since this is version 1, I do not prove anything. I just formalize all the propositions and definitions and "know" they are true.

import "basics.lit"
import "chap1.lit"
import "chap2.lit"
import "chap3.lit"

forall a Z, b Z, d Z:
    gcd(a, b) = 1
    gcd(a, d) = 1
    =>:
        b*d $in Z
        gcd(a, b*d) = 1



