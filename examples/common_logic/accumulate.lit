fn accumulate(s finite_set, op fn(s, s)s) fn(n N) s:
    dom:
        len(s) > 0
    =>:
        accumulate(s, op)(0) = s[0]
        forall n N:
            n < len(s)
            =>:
                accumulate(s, op)(n + 1) = op(accumulate(s, op)(n), s[n + 1])
        forall n N:
            n >= len(s)
            =>:
                accumulate(s, op)(n) = accumulate(s, op)(len(s) - 1)

fn accumulation_of_finite_set(s finite_set, op fn(s, s)s) s:
    accumulate(s, op)(len(s) - 1)