let a, b R
let a R, b R
let a, b R， c Z

# N, N_pos, Z, Q, R
1 $in N
1 $in N_pos
1 $in Z
1 $in Q
1 $in R

每次引入新东西的时候，要有 1. 东西名 2. 它所属的集合

let a, b R
a $in obj
1 $in obj
let $in obj
set $in obj

let a, b R:
    a = 0
    b = 1

let c R:
    c = 2
    c = 1
    b = 2

把c存在环境里
know c $in a
know c =2

have 保证了引入的变量的存在性
let 不保证任何

# let是定义东西，定义主语
# prop 是定义谓词 proposition

let human set # human $in set

know human = R

prop intelligent(x human)

know forall x human =>$intelligent(x)

prop XXX(parameters parameter_sets):
    ...
    <=>:
        ....

--------------------------------

prop y(x N):
    <=>:
        x > 2
        x % 2 = 0



prop y(x N)

know forall x N: x > 2, x % 2 = 0 => $y(x)

know forall x N: $y(x) => x > 2, x % 2 = 0

--------------------------------

prop y2(x N, y R):
    x > 10
    y < 2
    <=>:
        x % 2 = 0
        y + x = 100


prop y2(x N, y R):
    dom:
        x > 10
        y < 2

know forall x N, y R: x > 10, y < 2, $y2(x, y) => x % 2 = 0, y + x = 100

know forall x N, y R: x > 10, y < 2, x % 2 = 0, y + x = 100 => $y2(x, y)

--------------------------------

let human set, Jordan human
prop intelligent(x human)
know forall x human => $intelligent(x)
$intelligent(Jordan)

--------------------------------

forall n R:
    n > 0
    =>:
        n > 0

forall n R:
    n > 0

$p(1)
1 $in R